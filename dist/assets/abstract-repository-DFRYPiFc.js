var y=Object.defineProperty;var p=(t,s,e)=>s in t?y(t,s,{enumerable:!0,configurable:!0,writable:!0,value:e}):t[s]=e;var a=(t,s,e)=>p(t,typeof s!="symbol"?s+"":s,e);import{a0 as b,Y as f,a1 as L,H as l,a2 as i,a3 as u,a4 as S,a5 as w,a6 as E,a7 as v}from"./index-B7rqJQ63.js";var R=(t=>(t.SCHOOLS="schools",t.STUDENTS="students",t.WEEKLY_LESSONS="weeklyLessons",t.DAILY_LESSONS="dailyLessons",t.SCHOOL_RECOVERY_LESSONS="schoolRecoveryLessons",t))(R||{});const o={};function g(){const t=()=>({toFirestore:e=>e,fromFirestore:e=>{const n=e.data();return n.id=e.id,n}}),s=e=>b(f(),e).withConverter(t());o.schools=s("schools"),o.students=s("students"),o.weeklyLessons=s("weeklyLessons"),o.dailyLessons=s("dailyLessons"),o.schoolRecoveryLessons=s("schoolRecoveryLessons")}function _(t){return Object.keys(o).length==0&&g(),o[t]}class A{constructor(){a(this,"handlers",[]);a(this,"unsubscription")}subscribe(s){return this.handlers.push(s),new O(this,s)}unsubscribe(s){var n;const e=this.handlers.indexOf(s);e!==-1&&this.handlers.splice(e,1),this.handlers.length==0&&((n=this.unsubscription)==null||n.call(this))}unsubscribeAll(){this.clear()}setUnsubscription(s){this.unsubscription=s}next(s){[...this.handlers].forEach(e=>e.next(s))}error(s){[...this.handlers].forEach(e=>{var n;return(n=e.error)==null?void 0:n.call(e,s)}),console.log(s)}clear(){this.handlers=[]}expose(){return this}}class O{constructor(s,e){this.liteEvent=s,this.handler=e}unsubscribe(){this.liteEvent.unsubscribe(this.handler)}}class x{constructor(s){this.collectionReference=s}async get(s){return(await this.getDoc(s)).data()}async getDoc(s){return await L(l(this.collectionReference,s))}async getAll(...s){const e=i(this.collectionReference,...s);return(await u(e)).docs.map(r=>r.data())}async getAllAdv(s,...e){const n=i(this.collectionReference,s,...e);return(await u(n)).docs.map(c=>c.data())}async getAllDocs(...s){const e=i(this.collectionReference,...s);return await u(e)}async save(s,e){return e!=null?(S(l(this.collectionReference,e),s),e):(await w(this.collectionReference,s)).id}observeAll(...s){const e=new A,n=i(this.collectionReference,...s),r=E(n,c=>{const h=c.docs.map(d=>d.data());e.next(h)},c=>{e.error(c)});return e.setUnsubscription(r),e}async delete(s){await v(l(this.collectionReference,s))}deleteAll(){throw new Error("Method not implemented.")}}export{x as A,R as D,_ as u};
